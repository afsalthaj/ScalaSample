{"assets":{"5DD1209AA13030FE61152581A18AAC69":{"type":"texture","index":92,"assetRequest":{"type":"slide","state":"outgoing","slide":"6B8C648F-9E7A-4A8E-9B82-0D3B264B0C66"},"url":{"web":"assets/5DD1209AA13030FE61152581A18AAC69.svg"},"width":1024,"height":768},"DB8451458D98EFA7506DBEBC2B1323F0":{"type":"texture","index":93,"assetRequest":{"type":"slide","state":"incoming","slide":"none"},"url":{"web":"assets/DB8451458D98EFA7506DBEBC2B1323F0.svg"},"width":1024,"height":768}},"events":[{"effects":[{"beginTime":0,"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"DB8451458D98EFA7506DBEBC2B1323F0"},{"animations":[{"timeOffset":0,"from":{"scalar":false},"beginTime":0,"repeatCount":0,"fillMode":"both","property":"hidden","autoreverses":false,"duration":0.01,"to":{"scalar":true}}],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"5DD1209AA13030FE61152581A18AAC69"}]}]},"effects":[],"duration":0.01,"type":"transition","name":"none","objectID":"0"}],"automaticPlay":false,"hyperlinks":[],"accessibility":[{"text":"\u2028//Exercise 6.11\u2028sealed trait Input\u2028case object Coin extends Input\u2028case object Turn extends Input\u2028case class Machine(locked: Boolean, candies: Int, coins: Int) {\u2028  def operateOnMachine(input: Input) = input match {\u2028    case _ if candies == 0 => this\u2028    case Coin if locked => Machine(false, candies, coins + 1)\u2028    case Turn if !locked => Machine(true, candies-1, coins)\u2028    case _ => this\u2028  }\u2028}\u2028\u2028/**\u2028  * The rules of the machine are as follows:\u2028  * Inserting a coin into a locked machine will cause it to unlock if there’s any candy left.\u2028  * Turning the knob on an unlocked machine will cause it to dispense candy and become locked.\u2028  * Turning the knob on a locked machine or inserting a coin into an unlocked machine does nothing.\u2028  * A machine that’s out of candy ignores all inputs.\u2028  */\u2028\u2028type MachineState = State[Machine, (Int, Int)]\u2028\u2028/**\u2028  * The method simulateMachine should operate the machine based on the list of inputs\u2028  * and return the number of coins and candies left in the machine at the end. For example,\u2028  * if the input Machine has 10 coins and 5 candies,\u2028  * and a total of 4 candies are successfully bought, the output should be (14, 1).\u2028  *\u2028  * {{{\u2028  *       def get[S]: State[S, S] = State(s => (s, s))\u2028          //The set action is constructed with a new state s. The resulting action ignores the incoming state,\u2028         // replaces it with the new state, and returns () instead of a meaningful value:\u2028         def set[S](s: S): State[S, Unit] = State(_ => ((), s))\u2028  * }}}\u2028  */\u2028def simulateMachine(inputs: List[Input]): State[Machine, (Int, Int)] = for {\u2028  state <- { val s: State[Machine, List[Unit]] = sequence(inputs.map(input => modifyS[Machine](_.operateOnMachine(input)))); s }\u2028  machine <- get\u2028} yield (machine.coins, machine.candies)\u2028\u2028","targetRectangle":{"y":106.72265625,"x":36,"width":727.3839999999999,"height":490}},{"text":"HARD PROBLEM OF STATE","targetRectangle":{"y":40,"x":36,"width":295.1414066255093,"height":28}}],"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"5DD1209AA13030FE61152581A18AAC69"}]}]}}]}