{"assets":{"5537C5D995F0EDA1648EC7FE7716A785":{"type":"texture","index":83,"assetRequest":{"type":"slide","state":"incoming","slide":"9CF83A1D-7128-4EDD-9FCF-8B0466327661"},"url":{"web":"assets/5537C5D995F0EDA1648EC7FE7716A785.svg"},"width":1024,"height":768},"5FAAF43A7BB1B6154DACF744533E50D4":{"type":"texture","index":82,"assetRequest":{"type":"slide","state":"outgoing","slide":"9EBC0200-5827-4018-9DF0-A8B5FF76B3ED"},"url":{"web":"assets/5FAAF43A7BB1B6154DACF744533E50D4.svg"},"width":1024,"height":768}},"events":[{"effects":[{"beginTime":0,"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"5537C5D995F0EDA1648EC7FE7716A785"},{"animations":[{"timeOffset":0,"from":{"scalar":false},"beginTime":0,"repeatCount":0,"fillMode":"both","property":"hidden","autoreverses":false,"duration":0.01,"to":{"scalar":true}}],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"5FAAF43A7BB1B6154DACF744533E50D4"}]}]},"effects":[],"duration":0.01,"type":"transition","name":"none","objectID":"0"}],"automaticPlay":false,"hyperlinks":[],"accessibility":[{"text":"CONTINUED","targetRectangle":{"y":40,"x":36,"width":133.3898439109325,"height":28}},{"text":"//Exercise 6.7\u2028// Hard: If you can combine two RNG transitions, you should be able to combine a whole list of them.\u2028// Implement sequence for combining a List of transitions into a single transition.\u2028// Use it to reimplement the ints function you wrote before.\u2028// For the latter, you can use the standard library function List.fill(n)(x) to make a list with x repeated n times.\u2028// you may find this\u2028def sequence[A](fs: List[Rand[A]]): Rand[List[A]] =\u2028  fs.foldLeft(unit(List[A]()))((a, b) => map2(b, a)(_ :: _))\u2028\u2028//val int: Rand[Int] = _.nextInt\u2028def ints(n: Int): Rand[List[Int]]= sequence(List.fill(n)(int))\u2028\u2028// send non-negative less than, which generates an integer between zero (inclusive) and n (exclusive)\u2028// However the generated value will be skewed for obvious reasons.\u2028// This will certainly generate a number in the range, but it’ll be skewed because Int.MaxValue may not be exactly\u2028// divisible by n. So numbers that are less than the remainder of that division will come up more frequently\u2028// Assume that, given n is 100, Int.MaxValue % 100 = 47; and most of the random generated will be less than 47\u2028// and hence skewed. Please run the spec to get an idea. Why this happens?\u2028// The maximum number that is divisible by 100 (that fit is 32 bit Integer) is Int.MaxValue - 47\u2028// Hence if n is between 0 and 47 or if n is between (Int.MaxValue - 47) and Int.MaxValue, the random number that you\u2028// generate will be less than 47. Hence the solution here is to limit the nonNegativeInt not to produce any number\u2028// that is greater than the maximum multiple of n. This is done in `nonNegativeLessThan`\u2028def nonNegativeLessThanSkewed(n: Int): Rand[Int] = map(nonNegativeInt)(_ % n)\u2028\u2028// A bit complicated, but you are on the right track as far as you can understand the above comments.\u2028def nonNegativeLessThan(n: Int): Rand[Int] = { rng =>\u2028  val (i, rng2) = nonNegativeInt(rng)\u2028  val mod = i % n\u2028  if (i + (n-1) - mod>= 0 )\u2028    (mod, rng2)\u2028  else nonNegativeLessThan(n)(rng)\u2028}\u2028\u2028//But it would be better to have a combinator that does this passing along for us.\u2028// Neither map nor map2 will cut it. We need a more powerful combinator, flatMap\u2028// Exercise 6.8.\u2028def flatMap[A,B](f: Rand[A])(g: A => Rand[B]): Rand[B] =\u2028rng => {\u2028  val (a, r) = f(rng)\u2028  g(a)(r)\u2028}\u2028\u2028def nonNegativeLessThanFlatMap(n: Int): Rand[Int] =\u2028  flatMap(nonNegativeInt) { i =>\u2028    val mod = i % n\u2028    if (i + (n - 1) >= mod) unit(mod)\u2028    else nonNegativeLessThanFlatMap(n)\u2028  }\u2028\u2028// Exercise 6.9\u2028// Reimplement map and map2 in terms of flatMap. The fact that this is\u2028// possible is what we’re referring to when we say that flatMap is more\u2028// powerful than map and map2.\u2028def mapViaFlatMap[A,B](s: Rand[A])(f: A => B): Rand[B] =\u2028flatMap(s)(a => unit(f(a)))\u2028\u2028// Neednt be so much focussing here\u2028def map2ViaFlatMap[A,B,C](ra: Rand[A], rb: Rand[B])(f: (A, B) => C): Rand[C] =\u2028// flatMap(ra)(a => flatMap(rb)(b => unit(f(a, b))))\u2028  flatMap(ra)(a => map(rb)(b => f(a, b)))\u2028","targetRectangle":{"y":97.84375000000006,"x":36,"width":567.1960000000009,"height":572}}],"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"5FAAF43A7BB1B6154DACF744533E50D4"}]}]}}]}