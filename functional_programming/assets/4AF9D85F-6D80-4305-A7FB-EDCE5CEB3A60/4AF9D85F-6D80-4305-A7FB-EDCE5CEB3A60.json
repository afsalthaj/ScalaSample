{"assets":{"D7C36B7C5A539E6FCFDF1F2DED38C700":{"type":"texture","index":68,"assetRequest":{"type":"slide","state":"outgoing","slide":"4AF9D85F-6D80-4305-A7FB-EDCE5CEB3A60"},"url":{"web":"assets/D7C36B7C5A539E6FCFDF1F2DED38C700.svg"},"width":1024,"height":768},"AB351807091BD17B701A1E8CC07D044D":{"type":"texture","index":69,"assetRequest":{"type":"slide","state":"incoming","slide":"A13C10D8-47E8-4083-BCF8-38D7BED11EEB"},"url":{"web":"assets/AB351807091BD17B701A1E8CC07D044D.svg"},"width":1024,"height":768}},"events":[{"effects":[{"beginTime":0,"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"AB351807091BD17B701A1E8CC07D044D"},{"animations":[{"timeOffset":0,"from":{"scalar":false},"beginTime":0,"repeatCount":0,"fillMode":"both","property":"hidden","autoreverses":false,"duration":0.01,"to":{"scalar":true}}],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"D7C36B7C5A539E6FCFDF1F2DED38C700"}]}]},"effects":[],"duration":0.01,"type":"transition","name":"none","objectID":"0"}],"automaticPlay":false,"hyperlinks":[],"accessibility":[{"text":"LAZY EVALUATION (THUNKS), BY-NAME and STRICT EVALUATION","targetRectangle":{"y":40,"x":36,"width":734.4140634834766,"height":28}},{"text":"import scala.{Stream => _}\u2028\u2028sealed trait Stream[+A]\u2028\u2028case object Empty extends Stream[Nothing]\u2028\u2028// A non empty stream consist of a head and a tail, which are both non-strict.\u2028// Due to technical limitations, these are thunks that must be explicitly forced,\u2028// rather than by-name parameters.\u2028case class Cons[+A](head: () => A, tail: () => Stream[A]) extends Stream[A]\u2028\u2028object Stream {\u2028  // smart Constructors\u2028  def cons[A](a:() => A, t: () => Stream[A]): Stream[A]  = {\u2028    // so, Cons is created through cons function, which is basically a smart constructor\u2028    // this will ensure that head and tail are evaluated just once.. yes only when the very first time\u2028    // it is called.\u2028    // We cache the head and tail as lazy values to avoid repeated evaluation\u2028    lazy val head = a()\u2028    lazy val tail = t()\u2028\u2028    Cons(() => head, () => tail)\u2028  }\u2028\u2028  // A smart constructor to create empty stream of a particular type\u2028  def empty[A]: Stream[A] = Empty\u2028\u2028  def apply[A](as: A*): Stream[A] = {\u2028    if(as.isEmpty) Empty else Cons(() => as.head, () => apply(as.tail: _*))\u2028  }\u2028\u2028  def headOption[A](a: Stream[A]): Option[A]= a match {\u2028    case Empty => None\u2028    // Explicit forcing of the h thunk using h()\u2028    // Note that we have to force h explicitly via h(), but other than that,\u2028    // the code works the same way as it would for List. But this ability of Stream to\u2028    // evaluate only the portion actually\u2028    // demanded (we don’t evaluate the tail of the Cons) is useful, as we’ll see.\u2028    case Cons(h, t) => Some(h())\u2028  }\u2028}","targetRectangle":{"y":99.84375,"x":36,"width":692.4400000000016,"height":575}}],"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"D7C36B7C5A539E6FCFDF1F2DED38C700"}]}]}}]}