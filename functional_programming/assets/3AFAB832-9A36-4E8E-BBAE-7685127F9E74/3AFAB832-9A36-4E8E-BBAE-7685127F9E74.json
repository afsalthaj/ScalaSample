{"assets":{"7D0615E55330DC7BB54FC249C5A0DFC8":{"type":"texture","index":28,"assetRequest":{"type":"slide","state":"outgoing","slide":"3AFAB832-9A36-4E8E-BBAE-7685127F9E74"},"url":{"web":"assets/7D0615E55330DC7BB54FC249C5A0DFC8.svg"},"width":1024,"height":768},"3C0DD2446F2CD6394EC689CFA1CFF66E":{"type":"texture","index":29,"assetRequest":{"type":"slide","state":"incoming","slide":"1CEB086E-9C82-465C-89C5-8CBF3B7BB94E"},"url":{"web":"assets/3C0DD2446F2CD6394EC689CFA1CFF66E.svg"},"width":1024,"height":768}},"events":[{"effects":[{"beginTime":0,"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"3C0DD2446F2CD6394EC689CFA1CFF66E"},{"animations":[{"timeOffset":0,"from":{"scalar":false},"beginTime":0,"repeatCount":0,"fillMode":"both","property":"hidden","autoreverses":false,"duration":0.01,"to":{"scalar":true}}],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"7D0615E55330DC7BB54FC249C5A0DFC8"}]}]},"effects":[],"duration":0.01,"type":"transition","name":"none","objectID":"0"}],"automaticPlay":false,"hyperlinks":[],"accessibility":[{"text":"HOW DID WE END UP WRITING FOLDLEFT","targetRectangle":{"y":40,"x":36,"width":466.6242193579674,"height":28}},{"text":"// Exercise 3.10 , .tail recursive version of the above foldRight\u2028// foldLeft, means the operation is mostly folding it from left to right\u2028def foldLeft[A, B](list: List[A], init: B)(f: (B, A) => B): B = {\u2028  @annotation.tailrec\u2028  def go(innerList: List[A], acc: B): B =\u2028    innerList match {\u2028      case Nil => acc\u2028      case Cons(x, xs) => go(xs, f(acc, x))\u2028    }\u2028\u2028  go(list, init)\u2028}\u2028","targetRectangle":{"y":88.42388916015625,"x":36,"width":352.6000000000005,"height":118}},{"text":"\u2028// We easily arrived at the above foldLeft using the below steps\u2028// 1st step\u2028def sumForInt[A, B](list: List[Int]) = {\u2028  def go(innerList: List[Int], acc: Int): Int = innerList match {\u2028    case Cons(x, xs) => go(xs, acc + x)\u2028    case Nil => acc\u2028  }\u2028\u2028  go(list, 0)\u2028}\u2028\u2028//2nd step\u2028def anythingForInt(list: List[Int], defaultValue: Int, someOperation: (Int, Int) => Int) = {\u2028  def go(innerList: List[Int], acc: Int): Int = innerList match {\u2028    case Cons(x, xs) => go(xs, someOperation(acc, x))\u2028    case Nil => acc\u2028  }\u2028  go (list, defaultValue)\u2028}\u2028\u2028//3rd step\u2028def anyOpOnAnything[A, B](list: List[A], defaultValue: B, f:(B, A) => B): B = {\u2028  def go(innerList: List[A], acc: B): B = innerList match {\u2028    case Cons(x, xs) => go (xs, f(acc, x))\u2028    case Nil         => acc\u2028  }\u2028\u2028  go(list, defaultValue)\u2028}\u2028\u2028// 4th step - just renaming the above function as fold\u2028def fold[A, B](list: List[A], defaultValue: B, f:(B, A) => B): B = {\u2028  def go(innerList: List[A], acc: B): B = innerList match {\u2028    case Cons(x, xs) => go (xs, f(acc, x))\u2028    case Nil         => acc\u2028  }\u2028\u2028  go(list, defaultValue)\u2028}\u2028\u2028// 5th why the above is foldLeft is explained when you do an append operation\u2028// Now you dont end up having a reversed list...starting from right folding towards left.\u2028def appendUsingFold[A](leftList: List[A], rightList: List[A]): List[A] =\u2028  fold(leftList, rightList, (acc: List[A], eachElement: A) => Cons(eachElement, acc))","targetRectangle":{"y":215.4238891601562,"x":36,"width":448.5999999999999,"height":440}}],"baseLayer":{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"objectID":"0","layers":[{"animations":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,-0.0004922987690640373,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":251658240,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"layers":[{"animations":[],"layers":[],"initialState":{"affineTransform":[1,0,0,1,0,0],"masksToBounds":false,"rotation":0,"scale":1,"position":{"pointX":512,"pointY":384},"width":1024,"sublayerTransform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"contentsRect":{"y":0,"x":0,"width":1,"height":1},"opacity":1,"edgeAntialiasingMask":0,"height":768,"hidden":false,"anchorPoint":{"pointX":0.5,"pointY":0.5}},"texture":"7D0615E55330DC7BB54FC249C5A0DFC8"}]}]}}]}